// function fibonacci(n) {
//     if (n <= 1) {
//         return n;
//     } else {
//         return fibonacci(n - 1) + fibonacci(n - 2);  // recursive
//     }
// }



// OR 

function fibonacci(n) {
    if (n <= 0) {
        return 0;
    } else if (n === 1) {
        return 1;
    }

    let fibPrev = 0;
    let fibCurrent = 1;

    for (let i = 2; i <= n; i++) {
        let fibNext = fibPrev + fibCurrent;
        fibPrev = fibCurrent;
        fibCurrent = fibNext;
    }
    
    return fibCurrent;
}

console.log(fibonacci(3)); // Output: 8
console.log(fibonacci(7)); // Output: 13 (0, 1, 1, 2, 3, 5, 8)
